package com.amazon.opendistroforelasticsearch.search.async.response;

import org.elasticsearch.action.support.nodes.BaseNodeResponse;
import org.elasticsearch.cluster.node.DiscoveryNode;
import org.elasticsearch.common.io.stream.StreamInput;
import org.elasticsearch.common.io.stream.StreamOutput;
import org.elasticsearch.common.xcontent.ToXContentFragment;
import org.elasticsearch.common.xcontent.XContentBuilder;

import java.io.IOException;
import java.util.Map;

/**
 * Represents the async search stats generated by an individual node
 */
public class AsyncSearchStatsNodeResponse extends BaseNodeResponse implements ToXContentFragment {

    private Map<String, Object> statsMap;

    public Map<String, Object> getStatsMap() {
        return statsMap;
    }

    public AsyncSearchStatsNodeResponse(DiscoveryNode node, Map<String, Object> statsMap) {
        super(node);
        this.statsMap = statsMap;
    }

    public static AsyncSearchStatsNodeResponse readStats(StreamInput in) throws IOException {
        AsyncSearchStatsNodeResponse asyncSearchStats = new AsyncSearchStatsNodeResponse(in);
        return asyncSearchStats;
    }

    public AsyncSearchStatsNodeResponse(StreamInput in) throws IOException {
        super(in);
        this.statsMap = in.readMap(StreamInput::readString, StreamInput::readGenericValue);
    }

    @Override
    public void writeTo(StreamOutput out) throws IOException {
        super.writeTo(out);
        out.writeMap(statsMap, StreamOutput::writeString, StreamOutput::writeGenericValue);
    }

    @Override
    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {
        for (String stat : statsMap.keySet()) {
            builder.field(stat, statsMap.get(stat));
        }
        return builder;
    }


}
